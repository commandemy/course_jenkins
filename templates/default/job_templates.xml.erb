<project>
  <actions/>
  <description/>
  <keepDependencies>false</keepDependencies>
  <properties/>
  <scm class="hudson.scm.NullSCM"/>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <javaposse.jobdsl.plugin.ExecuteDslScripts plugin="job-dsl@1.21">
    <scriptText>

      <% @cookbooks.each do |cb| %>

        def gitUrl<%= cb[:name] %> = '<%= cb[:git] %>'

        job {
              name 'foodcritic-course-<%= cb[:name] %>'
              scm {
                  git(gitUrl<%= cb[:name] %>)
              }
              wrappers {
                rvm('2.1.1')
                environmentVariables{
                  env('HTTP_PROXY', "http://10.1.204.2:3128")
                  env('HTTPS_PROXY', "http://10.1.204.2:3128")
                  env('http_proxy', "http://10.1.204.2:3128")
                  env('https_proxy', "http://10.1.204.2:3128")
                  env('no_proxy', "gitlab.course.com,localhost,127.0.0.1")
                }
              }
              steps {
                  shell('gem install foodcritic')
                  shell('foodcritic . -f correctness')
              }
        }

      <% end %>

      def blogUrl = '<%= @application_git %>'

      job {
        name 'blog-app-test'
        scm {
          git(blogUrl)
        }
        wrappers {
          rvm('2.1.1')
          environmentVariables{
            env('HTTP_PROXY', "http://10.1.204.2:3128")
            env('HTTPS_PROXY', "http://10.1.204.2:3128")
            env('http_proxy', "http://10.1.204.2:3128")
            env('https_proxy', "http://10.1.204.2:3128")
            env('no_proxy', "gitlab.course.com,localhost,127.0.0.1")
          }
        }
        steps {
          shell('gem install bundler')
          shell('bundle install --without production')
          shell('echo "Preparing test database..."')
          shell('bundle exec rake db:create RACK_ENV=test')
          shell('bundle exec rake db:migrate RACK_ENV=test')
          shell('echo "Running tests..."')
          shell('rm -rf reports; mkdir reports')
          shell('bundle exec cucumber --format html --out reports/cucumber.html || true')
          shell('bundle exec rspec --format h > reports/rspec.html || true')
        }
        publishers {
          publishHtml {
            report("reports", "Cucumber Report", "cucumber.html")
            report("reports", "RSpec Report", "rspec.html")
          }
        }
      }

      job {
        name 'blog-app-artifact-deploy'
        scm {
          git(blogUrl)
        }
        wrappers {
          rvm('2.1.1')
          sshAgent('<%= @ssh_agent %>')
          environmentVariables{
            env('HTTP_PROXY', "http://10.1.204.2:3128")
            env('HTTPS_PROXY', "http://10.1.204.2:3128")
            env('http_proxy', "http://10.1.204.2:3128")
            env('https_proxy', "http://10.1.204.2:3128")
            env('no_proxy', "gitlab.course.com,localhost,127.0.0.1")
          }
        }
        steps {
          shell('gem install fpm')
          shell('fpm -f -x .git -s dir -t tar -n blog *')
          shell('parallel-ssh -O StrictHostKeyChecking=no -l ubuntu@<%= @hosts_string %> "sudo chef-client"')
        }
        publishers {
          archiveArtifacts '**/*.tar'
          wsCleanup()
        }
      }

</scriptText>
<usingScriptText>true</usingScriptText>
<ignoreExisting>false</ignoreExisting>
<removedJobAction>DELETE</removedJobAction>
</javaposse.jobdsl.plugin.ExecuteDslScripts>
</builders>
<publishers/>
<buildWrappers/>
</project>